<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
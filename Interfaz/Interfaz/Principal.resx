<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>